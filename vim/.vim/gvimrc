:set guifont=CourierNew\ 10
:set guioptions -=m "removes the menubar
:set guioptions -=T	"removes the toolbar
":colorscheme eclipse
:color codeschool
:highlight Search gui=bold guifg=#5440f0 guibg=#f0c0ff
":colorscheme lucius
"LuciusDarkHighContrast

":silent! e .
"let g:netrw_liststyle=3
":let g:netrw_chgwin=2 
":NERDTree

"autocmd vimenter * TlistToggle
"let Tlist_Sort_Type = "name"
"let Tlist_Show_One_File = 1

autocmd vimenter * NERDTree
:let NERDTreeQuitOnOpen = 0
:let NERDTreeShowHidden=1

"let g:ctrlp_user_command = 'find %s -type f'        " MacOSX/Linux
"let g:ctrlp_max_files=0
let g:ctrlp_max_depth=40
let g:ctrlp_clear_cache_on_exit = 0

:set tags+=ftags

:syntax on

" allows tab completion on VIM commands
set wildmenu
set wildmode=list:longest,full

"Display line numbers
set number

"starts highlighting the 1st word it finds
set incsearch

"when a tab is closed, close the buffer
"set nohidden

"set highlighting search on
set hlsearch

set ignorecase          " case insensitive searching
set smartcase           " but become case sensitive if you type uppercase characters
set nowrap
:set scrolloff=4

"make backspace behave as normal
set backspace=indent,eol,start

" size of a hard tabstop
set tabstop=4
set expandtab

" size of an "indent"
set shiftwidth=4

set vb			" turn off bells completely by enabling visual bell
set t_vb=		" and then clear the visual bell code

"always show the mouse cursor
set mousehide!

"when creating a new vertical split, create it on the right
set splitright

"let minibufeplr show up as soon as a buffer is available
let g:miniBUfExplBuffersNeeded=1

"key mappings
:nnoremap <A-x>d :Fp<space>
:nnoremap <A-x>d<enter> :Fp<space><C-r><C-w><enter>
:nnoremap <Esc> zR
:nnoremap <C-]> <C-]>zz
" :nnoremap <F5> <C-W><Left>
nnoremap * *``

"Ctrl+\ - Open the definition in a new tab
"map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
"Alt+] - Open the definition in a vertical split
map <A-]> :vsp <CR>:exec("tag ".expand("<cword>"))<CR>

" F4: Buffer list
map <silent> <F4> :MBEToggle<CR>

" F5: Tag list
imap <silent> <F5> :Tlist<CR>
map <silent> <F5> :Tlist<CR>

" F6: File list
map <silent> <F6> :NERDTreeToggle<CR>

" F7: Find word under in all files in current dir or subdirectories
"map <F7> :execute "vimgrep /" . expand("<cword>") . "/j **/*." . expand('%:e') <Bar> cw<CR>
"map <F7> :execute "vimgrep /" . expand("<cword>") . "/j **/*." . expand('%:e')<CR>
map <F7> :execute "vimgrep /" . expand("<cword>") . "/j **/*.tmpl **/*.py **/*.cc **/*.c **/*.cxx **/*.cpp **/*.h"<CR>

" F8: Rebuild ctags database
map <F8> :!ctags -R --c++-kinds=+pl --fields=+iaS --extra=+qf .<CR>
"ctags -R -f ./.git/tags .

" F9: Build cscope database
map <F9> :!cscope -R .<CR>

function! MyFoldText()
	return " "
endfunction
set foldtext=MyFoldText()

"highlight FoldColumn  gui=bold    guifg=grey65     guibg=Grey90
"highlight Folded      gui=italic  guifg=Black      guibg=Grey90
"highlight LineNr      gui=NONE    guifg=grey60     guibg=Grey90
:highlight Search gui=bold guifg=#5440f0 guibg=#f0c0ff

"set fillchars-=fold:-
set fillchars=""

"autocmd VimEnter * <C-W>l
":execute "normal \<C-W>l"
"autocmd VimEnter * wincmd l
"autocmd VimEnter * wincmd J
"autocmd VimEnter * wincmd k
"autocmd VimEnter * wincmd l
"autocmd VimEnter * wincmd L
"autocmd VimEnter * so ~/.vim/setmyfold.vim
":execute "normal so ~/.vim/setmyfold.vim"
"so ~/.vim/setmyfold.vim"

" Remove trailing trailing white space on file save
autocmd FileType c,cpp,java,php,python autocmd BufWritePre <buffer> %s/\s\+$//e
